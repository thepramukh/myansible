- name: "Gathering Remote Peering details"
  oci_network_remote_peering_connection_facts:
    config_file_location: '{{ oci_local_homedir }}/.oci/config'
    config_profile_name: '{{ oci_tenancy }}_{{ oci_datacenter }}'
    compartment_id: "{{ item.key  }}"
  loop: '{{ compartments | dict2items }}'
  register: rpg_list
  loop_control:
    label: "{{ item.value }}"

- name: "creating Remote Peering dict from json data"
  set_fact:
    rpg: '{{ rpg | default({}) | combine ( {item.id : [ item.display_name, drg[item.drg_id][0], compartments[item.compartment_id], item.is_cross_tenancy_peering, item.lifecycle_state, item.peer_id, item.peer_region_name, item.peer_tenancy_id,  item.peering_status ]} ) }}'
  with_items: '{{ rpg_list | json_query ( "results[*].remote_peering_connections[*]" ) }}'
  loop_control:
    label: "{{ item.display_name }}"

- name: 'Write out CSV header for Remote Peering'
  lineinfile:
    create: 'no'
    insertafter: 'EOF'
    line: "\n\nRemote-Peering,Drg,Compartment,Corss-Tenancy-Peering,State,Peered-ID,Peered-Region,Peered-Tenancy,Peer-Status,Creation-Time,ocid"
    path: "/home/{{ oci_local_username }}/tenancy_decommision/{{ oci_tenancy + '_' + oci_datacenter }}/drg.csv"
    state: 'present'

- name: 'Write out CSV content for Remote Peering'
  lineinfile:
    create: 'no'
    insertafter: 'EOF'
    line: "{{ item.display_name }},{{ drg[item.drg_id][0] }},{{ compartments[item.compartment_id] }},{{ item.is_cross_tenancy_peering }},{{ item.lifecycle_state }},{{ item.peer_id }},{{ item.peer_region_name }},{{ item.peer_tenancy_id }},{{ item.peering_status }},{{ item.time_created.split('.')[0] }},{{ item.id }}"
    path: "/home/{{ oci_local_username }}/tenancy_decommision/{{ oci_tenancy + '_' + oci_datacenter }}/drg.csv"
    state: 'present'
  with_items: '{{ rpg_list | json_query ( "results[*].remote_peering_connections[*]" ) }}'
  loop_control:
    label: "{{ item.display_name }}"