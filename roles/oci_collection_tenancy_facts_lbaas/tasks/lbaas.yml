- name: "Gathering all available LBAAS details in tenancy"
  oci_loadbalancer_load_balancer_facts:
    config_file_location: '{{ oci_local_homedir }}/.oci/config'
    config_profile_name: '{{ oci_tenancy }}_{{ oci_datacenter }}'
    compartment_id: "{{ item.key  }}"
  loop: '{{ compartments | dict2items }}'
  register: lbaas_list
  loop_control:
    label: "{{ item.value }}"

- name: "creating LBAAS dict from json data"
  set_fact:
    lbaas: '{{ lbaas | default({}) | combine ( {item.id : [item.display_name, item.ip_addresses, "Is_Private: "+item.is_private | string, compartments[item.compartment_id], item.subnet_ids, item.backend_sets]} ) }}'
  with_items: '{{ lbaas_list | json_query ( "results[*].load_balancers[*]" ) }}'
  loop_control:
    label: "{{ item.display_name }}"

- name: 'Write out CSV header for lbaas'
  copy:
    content: "Compartment,Name,IP-Addr,Is-Private,Shape,Subnet-Ids,Lifecycle-State,Backend Set IP,Creation-Time,OCID"
    dest: "/home/{{ oci_local_username }}/tenancy_decommision/{{ oci_tenancy + '_' + oci_datacenter }}/loadbalancers.csv"

- name: 'Write out CSV content for lbaas'
  lineinfile:
    create: 'no'
    insertafter: 'EOF'
    line: '{{ compartments[item.compartment_id] }},{{ item.display_name }},{{ item.ip_addresses[0].ip_address }},{{ item.is_private }},{{ item.shape_name }},{{ item.subnet_ids | join (":") }},{{ item.lifecycle_state }},{{ item.backend_sets | json_query ( "*.backends[*].[ip_address, port]") | flatten | join (" ") }},{{ item.time_created.split(".")[0] }},{{ item.id }}'
    path: "/home/{{ oci_local_username }}/tenancy_decommision/{{ oci_tenancy + '_' + oci_datacenter }}/loadbalancers.csv"
    state: 'present'
  with_items: '{{ lbaas_list | json_query ( "results[*].load_balancers[*]" ) }}'
  loop_control:
    label: '{{ item.display_name }}'